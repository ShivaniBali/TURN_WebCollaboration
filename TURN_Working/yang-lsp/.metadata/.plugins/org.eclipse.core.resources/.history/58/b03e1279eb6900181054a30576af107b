package mcgill.xtext.turn.utils

import com.google.inject.Singleton

import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.emf.ecore.EObject

import static extension org.eclipse.xtext.EcoreUtil2.getContainerOfType
import com.google.inject.AbstractModule

/**
 * Convenient extension methods for the YANG language.
 * 
 * @author akos.kitta 
 */
@Singleton
class YangExtensions {

	/**
	 * The {@code 1.0} YANG version.
	 */
	public static val YANG_1 = "1";

	/**
	 * The {@code 1.1} YANG version.
	 */
	public static val YANG_1_1 = "1.1";

	/**
	 * Returns with the YANG version of the module where the AST node element is contained.
	 * <p>
	 * Returns with version {@code 1} if the container module does not declare the version or the version equals
	 * with {@code 1}.
	 * <p>
	 * Returns with {@code 1.1} if the container module has declared YANG version, and that equals to {@code 1.1},
	 * otherwise returns with {@code null}. Also returns with {@code null}, if the argument is not contained in a module.
	 */


	
	def String getRevisionFromFileName(AbstractModule module) {
		val rawFileName = module.eResource.getURI().trimFileExtension.lastSegment
		val index = rawFileName.indexOf('@')
		if(index > -1) 
			rawFileName.substring(index + 1)
		else
			null
	}
}
