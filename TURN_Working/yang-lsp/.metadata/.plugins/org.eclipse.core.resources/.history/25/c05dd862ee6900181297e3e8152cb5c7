package mcgill.xtext.turn.diagram.test;

import com.google.inject.Inject;
import io.typefox.sprotty.api.SModelRoot;
import mcgill.xtext.turn.diagram.TURNDiagramGenerator;
import mcgill.xtext.turn.diagram.test.AbstractYangTest;
import mcgill.xtext.turn.diagram.test.TURNDiagramInjectorProvider;
import mcgill.xtext.turn.diagram.test.TestDiagramState;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.XtextRunner;
import org.eclipse.xtext.util.CancelIndicator;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(XtextRunner.class)
@InjectWith(TURNDiagramInjectorProvider.class)
@SuppressWarnings("all")
public class DiagramGeneratorTest extends AbstractYangTest {
  @Inject
  private TURNDiagramGenerator generator;
  
  protected void assertGeneratedTo(final Resource source, final CharSequence target) {
    TestDiagramState _testDiagramState = new TestDiagramState(source);
    final SModelRoot diagram = this.generator.generate(source, _testDiagramState, CancelIndicator.NullImpl);
    Assert.assertEquals(target.toString().replace("\r", "").trim(), diagram.toString());
  }
  
  @Test
  public void testGenerator() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("module mytest2 {");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("yang-version 1.1;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("namespace \"urn:example2:system\";");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("prefix \"myt2\";");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("grouping mytest2Group {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("description \"Group of mytest2, man!\";");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("leaf mytest2GroupLeaf {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("type string;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("container bla {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("leaf blubb {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("type string;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("description \"ein test\";");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    this.load(_builder);
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("module mytest {");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("yang-version 1.1;");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("namespace \"urn:example:system\";");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("prefix \"myt\";");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("import mytest2{");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("prefix \"myt2\";");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("grouping endpoint {");
    _builder_1.newLine();
    _builder_1.append("       ");
    _builder_1.append("description \"A reusable endpoint group.\";");
    _builder_1.newLine();
    _builder_1.append("       ");
    _builder_1.append("leaf ip {");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("       ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("       ");
    _builder_1.append("leaf port {");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("       ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("grouping anotherGroup {");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("description \"Another group, yo!\";");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("leaf anotherGroupLeaf {");
    _builder_1.newLine();
    _builder_1.append("             ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("augment \"/myt:testcontainer\" {");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("leaf augmentLeaf {");
    _builder_1.newLine();
    _builder_1.append("             ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("augment \"/myt:testcontainer/myt:innerTestContainer\" {");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("uses myt2:mytest2Group;");
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("augment \"/myt2:bla\" {");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("leaf blaLeaf {");
    _builder_1.newLine();
    _builder_1.append("             ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("         ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("     ");
    _builder_1.append("container testcontainer {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("container innerTestContainer {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("list innerTestList {");
    _builder_1.newLine();
    _builder_1.append("                ");
    _builder_1.append("key \"keyLeaf\";");
    _builder_1.newLine();
    _builder_1.append("                ");
    _builder_1.append("container listContainer {");
    _builder_1.newLine();
    _builder_1.append("                    ");
    _builder_1.append("leaf meAlone {");
    _builder_1.newLine();
    _builder_1.append("                        ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("                    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("                ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("                ");
    _builder_1.append("leaf keyLeaf {");
    _builder_1.newLine();
    _builder_1.append("                    ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("                ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("leaf-list leafList {");
    _builder_1.newLine();
    _builder_1.append("                ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("leaf anotherLeaf {");
    _builder_1.newLine();
    _builder_1.append("                ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("leaf testleaf {");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("type string;");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("description \"this is a simple test leaf!\";");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("container groupingTest {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("uses anotherGroup;");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("container externalGroupingTest {");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("uses myt2:mytest2Group;");
    _builder_1.newLine();
    _builder_1.append("    ");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    final Resource r2 = this.load(_builder_1);
    StringConcatenation _builder_2 = new StringConcatenation();
    _builder_2.append("SGraph [");
    _builder_2.newLine();
    _builder_2.append("  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("vGap = 0.0");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("hGap = 10.0");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("hAlign = \"left\"");
    _builder_2.newLine();
    _builder_2.append("  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("  ");
    _builder_2.append("revision = 0");
    _builder_2.newLine();
    _builder_2.append("  ");
    _builder_2.append("type = \"graph\"");
    _builder_2.newLine();
    _builder_2.append("  ");
    _builder_2.append("id = \"yang\"");
    _builder_2.newLine();
    _builder_2.append("  ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("expanded = false");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("trace = \"synthetic:///__synthetic0.yang#/\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("paddingLeft = 5.0");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("paddingRight = 5.0");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("paddingTop = 5.0");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("paddingBottom = 5.0");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("type = \"node:module\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("id = \"mytest2:myt2\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest2:myt2-heading\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("text = \"mytest2:myt2\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"label:heading\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest2:myt2-label\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SButton [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"button:expand\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest2:myt2-expand\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("expanded = true");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#/\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("paddingLeft = 5.0");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("paddingRight = 5.0");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("paddingTop = 5.0");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("paddingBottom = 5.0");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("type = \"node:module\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("id = \"mytest:myt\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-heading\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("text = \"mytest:myt\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"label:heading\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-label\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SButton [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"button:expand\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-expand\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"moduleNode\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"M\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"mytest\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-/myt:testcontainer-augmentation\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node2mytest:myt-node-/myt:testcontainer-augmentation-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-uses mytest2Group-pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation2mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-uses mytest2Group-pill-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"uses\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.7/@substatements.0\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-uses mytest2Group-pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 10.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 10.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingFactor = 1.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-uses mytest2Group-pill-heading\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"uses mytest2Group\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:heading\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-uses mytest2Group-pill-heading-label\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node2mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-/myt2:bla-augmentation\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node2mytest:myt-node-/myt2:bla-augmentation-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-container-listContainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList2mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-container-listContainer-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"container\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.9/@substatements.0/@substatements.0/@substatements.1\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-container-listContainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-container-listContainer-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-container-listContainer-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"C\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-container-listContainer-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"listContainer\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-container-listContainer-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-container-listContainer-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.9/@substatements.0/@substatements.0/@substatements.1/@substatements.0\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"meAlone: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-container-listContainer-meAlone\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node-container-testcontainer-container-innerTestContainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer2mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"list\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.9/@substatements.0/@substatements.0\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"L\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"innerTestList\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.9/@substatements.0/@substatements.0/@substatements.2\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"* keyLeaf: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-list-innerTestList-keyLeaf\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node-container-testcontainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-testcontainer-container-innerTestContainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer2mytest:myt-node-container-testcontainer-container-innerTestContainer-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"container\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.9/@substatements.0\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"C\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"innerTestContainer\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.9/@substatements.0/@substatements.1\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"leafList[]: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-leafList\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.9/@substatements.0/@substatements.2\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"anotherLeaf: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-container-innerTestContainer-anotherLeaf\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-testcontainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node2mytest:myt-node-container-testcontainer-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node-container-groupingTest\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-groupingTest-uses anotherGroup-pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest2mytest:myt-node-container-groupingTest-uses anotherGroup-pill-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"uses\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.10/@substatements.0\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest-uses anotherGroup-pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 10.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 10.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingFactor = 1.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest-uses anotherGroup-pill-heading\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"uses anotherGroup\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:heading\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest-uses anotherGroup-pill-heading-label\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-groupingTest\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node2mytest:myt-node-container-groupingTest-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node-container-externalGroupingTest\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-externalGroupingTest-uses mytest2Group-pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest2mytest:myt-node-container-externalGroupingTest-uses mytest2Group-pill-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"uses\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.11/@substatements.0\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest-uses mytest2Group-pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 10.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 10.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingFactor = 1.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest-uses mytest2Group-pill-heading\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"uses mytest2Group\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:heading\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest-uses mytest2Group-pill-heading-label\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-externalGroupingTest\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:composition\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node2mytest:myt-node-container-externalGroupingTest-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"grouping\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.4\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-grouping-endpoint\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-grouping-endpoint-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-grouping-endpoint-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"G\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-grouping-endpoint-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"endpoint\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-grouping-endpoint-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-grouping-endpoint-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.4/@substatements.1\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"ip: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-grouping-endpoint-ip\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.4/@substatements.2\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"port: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-grouping-endpoint-port\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"grouping\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.5\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-grouping-anotherGroup\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-grouping-anotherGroup-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-grouping-anotherGroup-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"G\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-grouping-anotherGroup-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"anotherGroup\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-grouping-anotherGroup-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-grouping-anotherGroup-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.5/@substatements.1\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"anotherGroupLeaf: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-grouping-anotherGroup-anotherGroupLeaf\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"augment\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.6\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer-augmentation\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer-augmentation-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer-augmentation-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"A\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer-augmentation-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"/myt:testcontainer\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer-augmentation-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer-augmentation-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.6/@substatements.0\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"augmentLeaf: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer-augmentation-augmentLeaf\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"augment\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.7\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"A\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"/myt:testcontainer/myt:innerTestContainer\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"augment\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.8\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-/myt2:bla-augmentation\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-/myt2:bla-augmentation-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-/myt2:bla-augmentation-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"A\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-/myt2:bla-augmentation-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"/myt2:bla\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-/myt2:bla-augmentation-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-/myt2:bla-augmentation-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.8/@substatements.0\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"blaLeaf: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-/myt2:bla-augmentation-blaLeaf\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"container\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.9\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"C\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"testcontainer\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.9/@substatements.1\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"testleaf: string\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"ylabel:text\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-testcontainer-testleaf\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"container\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.10\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"C\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"groupingTest\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("YangNode [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("cssClass = \"container\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("trace = \"synthetic:///__synthetic1.yang#//@substatements.11\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"node:class\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList (");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("YangHeaderNode [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"hbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 8.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 8.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest-header\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("YangTag [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layout = \"stack\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingLeft = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingRight = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingTop = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("paddingBottom = 0.0");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("resizeContainer = false");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("vAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("hAlign = \"center\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest-header-tag\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("children = UnmodifiableRandomAccessList (");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("text = \"C\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("type = \"label:tag\"");
    _builder_2.newLine();
    _builder_2.append("                      ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest-header-tag-text\"");
    _builder_2.newLine();
    _builder_2.append("                    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("SLabel [");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("text = \"externalGroupingTest\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("type = \"label:classHeader\"");
    _builder_2.newLine();
    _builder_2.append("                  ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest-header-header-label\"");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("SCompartment [");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layout = \"vbox\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("layoutOptions = LayoutOptions [");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingLeft = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingRight = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingTop = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("paddingBottom = 12.0");
    _builder_2.newLine();
    _builder_2.append("                ");
    _builder_2.append("vGap = 2.0");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("type = \"comp:comp\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("id = \"mytest:myt-node-container-externalGroupingTest-compartment\"");
    _builder_2.newLine();
    _builder_2.append("              ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("            ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node-/myt:testcontainer-augmentation\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-testcontainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:augments\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer-augmentation2mytest:myt-node-container-testcontainer-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-container-testcontainer-container-innerTestContainer\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:augments\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-/myt:testcontainer/myt:innerTestContainer-augmentation2mytest:myt-node-container-testcontainer-container-innerTestContainer-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("sourceId = \"mytest:myt-node-container-groupingTest-uses anotherGroup-pill\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("targetId = \"mytest:myt-node-grouping-anotherGroup\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("type = \"edge:uses\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("id = \"mytest:myt-node-container-groupingTest-uses anotherGroup-pill2mytest:myt-node-grouping-anotherGroup-edge\"");
    _builder_2.newLine();
    _builder_2.append("          ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("        ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("],");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("SEdge [");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("sourceId = \"mytest2:myt2\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("targetId = \"mytest:myt\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("type = \"edge:import\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("id = \"mytest2:myt22mytest:myt-edge\"");
    _builder_2.newLine();
    _builder_2.append("      ");
    _builder_2.append("children = ArrayList ()");
    _builder_2.newLine();
    _builder_2.append("    ");
    _builder_2.append("]");
    _builder_2.newLine();
    _builder_2.append("  ");
    _builder_2.append(")");
    _builder_2.newLine();
    _builder_2.append("]");
    _builder_2.newLine();
    this.assertGeneratedTo(r2, _builder_2);
  }
}
